% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{nested_cv}
\alias{nested_cv}
\title{Use nested cross-validation to estimate error f w.r.t. tuning_parameter}
\usage{
nested_cv(f, data, output, tuning_parameters, maxit_per_fold, nfolds)
}
\arguments{
\item{f}{Must be evaluated by calling on any consecutive subset
of the rows of data, output, and an entry from tuning_parameter,
e.g. \code{f(tuning_parameter[[1]], data, output)}. Should return
a function \code{g} which may be evaluated
on any consecutive subset of rows of data and output
as \code{g(data, output)} and return the error.
For both \code{f} and \code{g}, arguments are passed positionally.
To have \code{f} re-use data, have it access
the list \code{previous_data} in its \code{parent.frame()},
i.e. the execution environment of this function.}

\item{data}{A data frame. Treats row index like time, first
rows are revealed first.}

\item{output}{A vector of the desired output, each entry corresponds
to a row in the data frame}

\item{tuning_parameters}{a list, each entry of which is a potential
tuning parameter to f}

\item{nfolds}{Number of folds, if missing defaults to folds of size 1}
}
\value{
a list with each weight elimination parameter
    and the average cv error
}
\description{
Tests each given option to tuning_parameter
using nested cross validation (i.e. the nth row of data depends
on the (n-1)th) to estimate the out-of-sample error of f
w.r.t. the tuning_parameter
}
